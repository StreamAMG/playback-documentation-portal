x-stoplight:
  docs:
    showModels: false

x-internal: true

openapi: 3.1.0
info:
  title: Playback Configuration API
  version: "1.0"
  contact:
    name: Jonathon Robins
    email: Jonathon.Robins@pamediagroup.com
  summary: Service used to manage playback service client configurations.
  description: |-
    The Playback Client Configuration API exposes the functionality to retrieve, update and delete playback client 
    configurations. We can also manage Playback API-Key configuration using this API. 

    All endpoints are authenticated by passing a valid access token (as generated from the AWS Cognito Playback User 
    Pool) through the 'Bearer' header which is authenticated using AWS Cognito.
servers:
  - url: "https://api.playback.streamamg.com/v1/"
paths:
  /configuration/{id}:
    get:
      tags:
        - Playback Configuration
      summary: Get playback configuration for a client
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Identifier of the client to retrieve the configuration for
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlaybackConfig"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                description: No permissions to retrieve playback configuration
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 401
                  message:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
              examples:
                Unauthorized:
                  value:
                    status: 401
                    message: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                description: No playback configuration found
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 404
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
                  - error
              examples:
                Invalid Client Identifier:
                  value:
                    status: 404
                    message: "Not Found configuration: 46033f3f-9a81-9c69-4ad9-b58b72e6c9e9"
                    error: Not Found

    patch:
      tags:
        - Playback Configuration
      summary: Partially update playback configuration
      description: |-
        Update the playback configuration for a client.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Identifier of the client to update the configuration for
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PartialPlaybackConfigData"
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                description: No permissions to update the playback configuration
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 401
                  message:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
              examples:
                Unauthorized:
                  value:
                    status: 401
                    message: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                description: No playback configuration found
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 404
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
                  - error
              examples:
                Invalid Client Identifier:
                  value:
                    status: 404
                    message: "Configuration for 46033f3f-9a81-9c69-4ad9-b58b72e6c9e9 was not found"
                    error: Not Found
    delete:
      tags:
        - Playback Configuration
      summary: Delete playback configuration for a client
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Identifier of the client to delete the configuration for
          required: true
          schema:
            type: string
      responses:
        204:
          description: No Content
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                description: No permissions to delete playback configuration
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 401
                  message:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
              examples:
                Unauthorized:
                  value:
                    status: 401
                    message: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                description: No playback configuration found
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 404
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
                  - error
              examples:
                Invalid Client Identifier:
                  value:
                    status: 404
                    message: "Not Found configuration: 46033f3f-9a81-9c69-4ad9-b58b72e6c9e9"
                    error: Not Found

  /configuration:
    post:
      tags:
        - Playback Configuration
      summary: Create new a playback configuration for a client
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlaybackConfigData"
      responses:
        201:
          description: Created New Client Configuration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlaybackConfig"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                description: Error creating a new configuration for a client
                type: object
                properties:
                  statusCode:
                    type: number
                    enum:
                      - 400
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    enum:
                      - Bad Request
                required:
                  - statusCode
                  - message
                  - error
              examples:
                Invalid Client Identifier:
                  value:
                    status: 400
                    message: id must be a UUID
                    error: Bad Request
                Platform Is Required:
                  value:
                    status: 400
                    message: platform must be a non-empty object
                    error: Bad Request
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                description: No permissions to create playback configuration
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 401
                  message:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
              examples:
                Unauthorized:
                  value:
                    status: 401
                    message: Unauthorized

  /configuration/{configId}/apikey:
    get:
      tags:
        - API Key Configuration
      summary: Get all playback API keys for a given configId
      security:
        - bearerAuth: []
      parameters:
        - name: configId
          in: path
          description: Identifier of the client to retrieve API keys for
          required: true
          schema:
            type: string

      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/PlaybackApiKeyConfig"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                description: No permissions to get API Key Configuration
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 401
                  message:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
              examples:
                Unauthorized:
                  value:
                    status: 401
                    message: Unauthorized
    post:
      tags:
        - API Key Configuration
      summary: Create new Playback API Key configuration for a client
      description: |-
        A new API-Key configuration will be created for a client (the client configuration typically would exist first
        but need not so - this allows for keys to be created for clients in advance of creating the client configurations)
      security:
        - bearerAuth: []
      parameters:
        - name: configId
          in: path
          description: Identifier of the client to create API key configuration for
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Web
      responses:
        201:
          description: Created New API-Key Configuration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlaybackApiKeyConfig"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                description: Invalid request
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    minLength: 1
                  statusCode:
                    type: number
                    enum:
                      - 400
                required:
                  - message
                  - statusCode
                  - error
              examples:
                BadRequest:
                  value:
                    statusCode: 400
                    error: Bad Request
                    message: API key configuration with 'Web' name already exists, please provide a unique name.
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                description: No permissions to create API Key Configuration
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 401
                  message:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
              examples:
                Unauthorized:
                  value:
                    status: 401
                    message: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                description: Configuration not found
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 404
                  message:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
              examples:
                NotFound:
                  value:
                    status: 404
                    message: "Not Found configuration: 123-123-123"

  /configuration/{configId}/apikey/{keyId}:
    get:
      tags:
        - API Key Configuration
      summary: Get single playback API key
      security:
        - bearerAuth: []
      parameters:
        - name: configId
          in: path
          description: Identifier of the client to retrieve API key for
          required: true
          schema:
            type: string
        - name: keyId
          in: path
          description: Identifier of the API key
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlaybackApiKeyConfig"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                description: No permissions to get API Key Configuration
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 401
                  message:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
              examples:
                Unauthorized:
                  value:
                    status: 401
                    message: Unauthorized
          404:
            description: Not Found
            content:
              application/json:
                schema:
                  description: Api key configuration not found
                  type: object
                  properties:
                    status:
                      type: number
                      enum:
                        - 404
                    message:
                      type: string
                      minLength: 1
                    error:
                      type: string
                      minLength: 1
                  required:
                    - status
                    - message
                    - error
                examples:
                  Invalid Client Identifier:
                    value:
                      status: 404
                      message: "Specified api key not found: 46033f3f-9a81-9c69-4ad9-b58b72e6c9e9"
                      error: Not Found
    delete:
      tags:
        - API Key Configuration
      summary: Delete playback api-key configuration for a client
      security:
        - bearerAuth: []
      parameters:
        - name: configId
          in: path
          description: Identifier of the client to remove API key for
          required: true
          schema:
            type: string
        - name: keyId
          in: path
          description: Identifier of the API key
          required: true
          schema:
            type: string
      responses:
        204:
          description: No Content
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                description: No permissions to delete API Key Configuration
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 401
                  message:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
              examples:
                Unauthorized:
                  value:
                    status: 401
                    message: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                description: Api key configuration not found
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 404
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
                  - error
              examples:
                Invalid Client Identifier:
                  value:
                    status: 404
                    message: "Specified api key not found: 46033f3f-9a81-9c69-4ad9-b58b72e6c9e9"
                    error: Not Found
  /player:
    get:
      tags:
        - Player Configuration
      summary: Get player information
      description: Returns information about the player associated with the provided API key.
      security:
        - ApiKey: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  player:
                    type: object
                    $ref: "#/components/schemas/PlayerResponse"
                  featureFlags:
                    type: object
                    properties:
                      customErrorScreen:
                        type: boolean
                        example: false
                  defaults:
                    type: object
                    properties:
                      player:
                        type: string
                        example: "bitmovin"

        403:
          description: Unauthorized
          content:
            application/json:
              schema:
                description: Unauthorized
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                required:
                  - message
              examples:
                InvalidAPIKey:
                  value:
                    message: API Key not provided or not valid
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKey:
      type: apiKey
      in: header
      name: x-api-key
  schemas:
    PlaybackConfigKeys:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          example: "12345678-1111-1111-1111-123456789012"
      required:
        - id

    PlaybackApiKeys:
      type: object
      properties:
        configId:
          type: string
          minLength: 1
          pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
          example: "12345678-1111-1111-1111-123456789012"
      required:
        - configId

    AkamaiTokenizer:
      type: object
      properties:
        type:
          type: string
          example: "akamai"
          enum:
            - akamai
        key:
          type: string
          example: "key"
        windowSeconds:
          type: number
          example: 3600
        tokenName:
          type: string
          example: "tokenName"
      required:
        - type
        - key
        - windowSeconds
        - tokenName

    Tokenizer:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/AkamaiTokenizer"
      example:
        "streamamg-vbtv-vod.akamaized.net":
          type: "akamai"
          key: "key"
          windowSeconds: 3600
          tokenName: "tokenName"

    DeliveryConfiguration:
      type: object
      properties:
        tokenizer:
          $ref: "#/components/schemas/Tokenizer"

    BufferConfigurations:
      type: object
      properties:
        backwardduration:
          type: number
          example: 20
        forwardduration:
          type: number
          example: 10

    Buffer:
      properties:
        audio:
          type: object
          example: { backwardduration: 20, forwardduration: 10 }
          $ref: "#/components/schemas/BufferConfigurations"
        video:
          type: object
          example: { backwardduration: 20, forwardduration: 10 }
          $ref: "#/components/schemas/BufferConfigurations"
      example:
        video: { backwardduration: 20, forwardduration: 10 }
        audio: { backwardduration: 20, forwardduration: 10 }

    GlobalAdvert:
      type: object
      properties:
        adType:
          type: string
          enum:
            - vast
            - vmap
        discardAfterPlayback:
          type: boolean
        id:
          type: string
        persistent:
          type: boolean
        position:
          type: string
          enum:
            - pre
            - post
            - mid
        preloadOffset:
          type: number
        skippableAfter:
          type: number
        url:
          type: string
      required:
        - adType
        - id
        - position
        - url
      x-example-pre-position:
        adType: vast
        id: id123
        position: pre
        url: https://<some-global-advert>
      x-example-percentage-position:
        adType: vast
        id: id123
        position: 25%
        url: https://<some-global-advert>
      x-example-timecode-position:
        adType: vast
        id: id123
        position: 00:10:30.000
        url: https://<some-global-advert>

    GlobalAdverts:
      items:
        oneOf:
          - $ref: "#/components/schemas/GlobalAdvert"

    Auth:
      type: object
      properties:
        cloudpay:
          type: object
          minProperties: 1
          additionalProperties:
            type: string
          example:
            site: "some-site"
      required:
        - cloudpay

    PlaybackConfig:
      allOf:
        - $ref: "#/components/schemas/PlaybackConfigKeys"
        - $ref: "#/components/schemas/PlaybackConfigData"

    PlaybackConfigData:
      allOf:
        - type: object
          properties:
            description:
              type: string
              example: "Playback configuration example"
            tags:
              type: array
              items:
                type: string
                example: "Tag"
            auth:
              $ref: "#/components/schemas/Auth"
            domains:
              type: array
              items:
                type: string
              example: ["some-host1.com", "some-host2.com"]
            entitlementsUrl:
              type: string
              minLength: 1
            entitlements:
              type: object
              properties:
                defaultEntryEntitlement:
                  type: array
                  minItems: 1
                  items:
                    type: string
                  example: ["*"]
            platform:
              type: object
              minProperties: 2
              additionalProperties:
                type: object
              example:
                kaltura:
                  partnerId: "1234567"
                  partnerAdminSecret: "admin secret value"
              required:
                - partnerId
                - partnerAdminSecret
            deliveryConfiguration:
              $ref: "#/components/schemas/DeliveryConfiguration"
            player:
              $ref: "#/components/schemas/Player"
              minProperties: 1
            globalAdverts:
              $ref: "#/components/schemas/GlobalAdverts"
            featureFlags:
              type: object
              properties:
                customErrorScreen:
                  type: boolean
                  example: false
            defaults:
              type: object
              minProperties: 3
              properties:
                player:
                  type: string
                  example: bitmovin
                auth:
                  type: string
                  example: cloudpay
                platform:
                  type: string
                  example: kaltura
              required:
                - player
                - auth
                - platform
            tenantId:
              type: string
              example: 38a3a285-baab-4173-be9f-8f4aa4d31a5d
          required:
            - domains
            - entitlementsUrl
            - platform
            - player
            - auth
            - description
            - defaults
            - tenantId
    PartialPlaybackConfigData:
      allOf:
        - type: object
          properties:
            description:
              type: string
              example: "Playback configuration example"
            tags:
              type: array
              items:
                type: string
                example: "Tag"
            auth:
              $ref: "#/components/schemas/Auth"
            domains:
              type: array
              items:
                type: string
              example: ["some-host1.com", "some-host2.com"]
            entitlementsUrl:
              type: string
              minLength: 1
            entitlements:
              type: object
              properties:
                defaultEntryEntitlement:
                  type: array
                  minItems: 1
                  items:
                    type: string
                  example: ["*"]
            platform:
              type: object
              minProperties: 2
              additionalProperties:
                type: object
              example:
                kaltura:
                  partnerId: "1234567"
                  partnerAdminSecret: "admin secret value"
              required:
                - partnerId
                - partnerAdminSecret
            deliveryConfiguration:
              $ref: "#/components/schemas/DeliveryConfiguration"
            player:
              $ref: "#/components/schemas/Player"
              minProperties: 1
            globalAdverts:
              $ref: "#/components/schemas/GlobalAdverts"
            featureFlags:
              type: object
              properties:
                customErrorScreen:
                  type: boolean
                  example: false
            defaults:
              type: object
              minProperties: 3
              properties:
                player:
                  type: string
                  example: bitmovin
                auth:
                  type: string
                  example: cloudpay
                platform:
                  type: string
                  example: kaltura
              required:
                - player
                - auth
                - platform
            tenantId:
              type: string
              example: 38a3a285-baab-4173-be9f-8f4aa4d31a5d
          required:
            - tenantId
    player:
      type: object
      additionalProperties:
        type: object
        additionalProperties:
          type: object
          additionalProperties:
            type: object
      example:
        bitmovin:
          type: bitmovin
          license: 12345678-1111-1111-1111-123456789012
          integrations:
            mux:
              env_key: env_key_123
              player_name: some_player_name
        default: bitmovin

    PlaybackApiKeyConfig:
      allOf:
        - $ref: "#/components/schemas/PlaybackApiKeys"
        - type: object
          properties:
            id:
              type: string
              minLength: 1
              example: ghb4ok1234
            apiKey:
              type: string
              minLength: 1
              example: apikeyvalue
            name:
              type: string
              minLength: 1
              example: Web
          required:
            - id
            - apiKey

    BitrateLimitationConfig:
      allOf:
        - type: object
          properties:
            minSelectableVideoBitrate:
              type: [string, number]
              example: ["100bps", 100]
            maxSelectableVideoBitrate:
              type: [string, number]
              example: ["1000bps", 1000]
            minSelectableAudioBitrate:
              type: [string, number]
              example: ["0.00001bps", 0]
            maxSelectableAudioBitrate:
              type: [string, number]
              example: ["99999999gbps", 99999999999]

    AdaptationConfig:
      allOf:
        - type: object
          properties:
            bitrates:
              type: object
              $ref: "#/components/schemas/BitrateLimitationConfig"
            qualityStabilityBalance:
              type: number
              minimum: 0
              maximum: 1
              example: 0.5
            limitToPlayerSize:
              type: boolean
              example: false
            exclude:
              type: boolean
              example: true

    AdaptationPlatformConfig:
      allOf:
        - type: object
          $ref: "#/components/schemas/AdaptationConfig"
        - type: object
          properties:
            desktop:
              type: object
              $ref: "#/components/schemas/AdaptationConfig"
            mobile:
              type: object
              $ref: "#/components/schemas/AdaptationConfig"

    Player:
      allOf:
        - type: object
          additionalProperties:
            type: object
            properties:
              license:
                type: string
                minLength: 1
              integrations:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    type: string
              adaptation:
                type: object
                $ref: "#/components/schemas/AdaptationPlatformConfig"
              buffer:
                type: object
                $ref: "#/components/schemas/Buffer"
            required:
              - license
          example:
            bitmovin:
              license: 12345678-1111-1111-1111-123456789012
              integrations:
                mux:
                  player_name: "some name"
                  env_key: env_key_123
                resume:
                  enabled: true
                  jwtSecretKey: "some key"
              adaptation:
                bitrates:
                  minSelectableVideoBitrate: "500kbps"
                  maxSelectableVideoBitrate: "1mbps"
              buffer:
                audio:
                  backwardduration: 10
                  forwardduration: 40
                video:
                  backwardduration: 10
                  forwardduration: 70  

    PlayerResponse:
      allOf:
        - type: object
          additionalProperties:
            type: object
            properties:
              license:
                type: string
                minLength: 1
              integrations:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    type: string
              adaptation:
                type: object
                $ref: "#/components/schemas/AdaptationPlatformConfig"
              buffer:
                type: object
                $ref: "#/components/schemas/Buffer"
            required:
              - license
          example:
            bitmovin:
              license: 12345678-1111-1111-1111-123456789012
              integrations:
                mux:
                  player_name: "some name"
                  env_key: env_key_123
                resume:
                  enabled: true
              adaptation:
                bitrates:
                  minSelectableVideoBitrate: "500kbps"
                  maxSelectableVideoBitrate: "1mbps"
              buffer:
                audio:
                  backwardduration: 10
                  forwardduration: 40
                video:
                  backwardduration: 10
                  forwardduration: 70  
