x-stoplight:
  docs:
    showModels: false

x-internal: true

openapi: 3.1.0
info:
  title: Playback Configuration API
  version: '1.0'
  contact:
    name: Jonathon Robins
    email: Jonathon.Robins@pamediagroup.com
  summary: Service used to manage playback service client configurations.
  description: |-
    The Playback Client Configuration API exposes the functionality to retrieve, update and delete playback client 
    configurations. We can also manage Playback API-Key configuration using this API. 

    All endpoints are authenticated by passing a valid access token (as generated from the AWS Cognito Playback User 
    Pool) through the 'Bearer' header which is authenticated using AWS Cognito.
servers:
  - url: 'https://api.playback.streamamg.com/v1/'
paths:
  /configuration/{configurationId}:
    get:
      tags:
        - Playback Configuration
      summary: Get playback configuration for a client
      security:
        - bearerAuth: []
      parameters:
        - name: configurationId
          in: path
          description: Identifier of the client to retrieve the configuration for
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybackConfig'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                description: No permissions to retrieve playback configuration
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 401
                  message:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
              examples:
                Unauthorized:
                  value:
                    status: 401
                    message: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                description: No playback configuration found
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 404
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
                  - error
              examples:
                Invalid Client Identifier:
                  value:
                    status: 404
                    message: 'Not Found configuration: 46033f3f-9a81-9c69-4ad9-b58b72e6c9e9'
                    error: Not Found

    put:
      tags:
        - Playback Configuration
      summary: Update the playback configuration
      description: |-
        Update the playback configuration for a client creating a new configuration if it doesn't exist; the 
        entire configuration will be replaced so the full body representing a playback client configuration is required.
      security:
        - bearerAuth: []
      parameters:
        - name: configurationId
          in: path
          description: Identifier of the client to update the configuration for
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaybackConfigData'
      responses:
        200:
          description: OK
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                description: No permissions to update the playback configuration
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 401
                  message:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
              examples:
                Unauthorized:
                  value:
                    status: 401
                    message: Unauthorized
    delete:
      tags:
        - Playback Configuration
      summary: Delete playback configuration for a client
      security:
        - bearerAuth: []
      parameters:
        - name: configurationId
          in: path
          description: Identifier of the client to delete the configuration for
          required: true
          schema:
            type: string
      responses:
        204:
          description: No Content
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                description: No permissions to delete playback configuration
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 401
                  message:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
              examples:
                Unauthorized:
                  value:
                    status: 401
                    message: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                description: No playback configuration found
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 404
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
                  - error
              examples:
                Invalid Client Identifier:
                  value:
                    status: 404
                    message: 'Not Found configuration: 46033f3f-9a81-9c69-4ad9-b58b72e6c9e9'
                    error: Not Found

  /configuration:
    post:
      tags:
        - Playback Configuration
      summary: Create new a playback configuration for a client
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaybackConfig'
      responses:
        201:
          description: Created New Client Configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybackConfig'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                description: Error creating a new configuration for a client
                type: object
                properties:
                  statusCode:
                    type: number
                    enum:
                      - 400
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    enum:
                      - Bad Request
                required:
                  - statusCode
                  - message
                  - error
              examples:
                Invalid Client Identifier:
                  value:
                    status: 400
                    message: id must be a UUID
                    error: Bad Request
                Platform Is Required:
                  value:
                    status: 400
                    message: platform must be a non-empty object
                    error: Bad Request
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                description: No permissions to create playback configuration
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 401
                  message:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
              examples:
                Unauthorized:
                  value:
                    status: 401
                    message: Unauthorized

  /configuration/{configurationId}/apiKeys:
    get:
      tags: 
      - API Key Configuration
      summary: Get API KEY list for provided configId
      security:
        - bearerAuth: []
      parameters:
        - name: configurationId
          in: path
          description: Identifier of the client to retrieve API key configuration for
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybackApiKeysConfig'  
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                description: No permissions to get API Key Configuration
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 401
                  message:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
              examples:
                Unauthorized:
                  value:
                    status: 401
                    message: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                description: API KEY not found
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 404
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
                  - error
              examples:
                Invalid Config Identifier:
                  value:
                    status: 404
                    message: 'Api keys not found for the provided configId: 7410d601-39c9-4511-8c9a-151ea787eb29'
                    error: Not Found              


  /configuration/{configurationId}/apiKeys/{keyId}:
    get:
      tags:
        - API Key Configuration
      summary: Get playback API key configuration for a client
      security:
        - bearerAuth: []
      parameters:
        - name: configurationId
          in: path
          description: Identifier of the client to retrieve API key configuration for
          required: true
          schema:
            type: string
        - name: keyId
          in: path
          description: Identifier of the API KEY to retrieve
          required: true
          schema:
            type: string    
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybackApiKeyConfig'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                description: No permissions to get API Key Configuration
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 401
                  message:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
              examples:
                Unauthorized:
                  value:
                    status: 401
                    message: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                description: API KEY not found
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 404
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
                  - error
              examples:
                Invalid KEY Identifier:
                  value:
                    status: 404
                    message: 'Specified api key not found: 7410d601-39c9-4511-8c9a-151ea787eb29'
                    error: Not Found           
    post:
      tags:
        - API Key Configuration
      summary: Create new Playback API Key configuration for a client
      description: |-
        A new API-Key configuration will be created for a client (the client configuration typically would exist first
        but need not so - this allows for keys to be created for clients in advance of creating the client configurations)
      security:
        - bearerAuth: []
      parameters:
        - name: configurationId
          in: path
          description: Identifier of the client to create API key configuration for
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaybackKeys'
      responses:
        201:
          description: Created New API-Key Configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybackApiKeyConfig'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                description: No permissions to create API Key Configuration
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 401
                  message:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
              examples:
                Unauthorized:
                  value:
                    status: 401
                    message: Unauthorized
    delete:
      tags:
        - API Key Configuration
      summary: Delete playback api-key configuration for a client
      security:
        - bearerAuth: []
      parameters:
        - name: configurationId
          in: path
          description: Identifier of the client to delete api-key configuration for
          required: true
          schema:
            type: string
      responses:
        204:
          description: No Content
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                description: No permissions to delete API Key Configuration
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 401
                  message:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
              examples:
                Unauthorized:
                  value:
                    status: 401
                    message: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                description: Api key configuration not found
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 404
                  message:
                    type: string
                    minLength: 1
                  error:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
                  - error
              examples:
                Invalid Client Identifier:
                  value:
                    status: 404
                    message: 'Not Found apikey configuration: 46033f3f-9a81-9c69-4ad9-b58b72e6c9e9'
                    error: Not Found
  /player:
    get:
      tags:
        - Player Configuration
      summary: Get player information
      description: Returns information about the player associated with the provided API key.
      security:
        - ApiKey: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        403:
          description: Unauthorized
          content:
            application/json:
              schema:
                description: Invalid API-Key
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 401
                  message:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
              examples:
                Unauthorized:
                  value:
                    status: 403
                    message: Unauthorized
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKey:
      type: apiKey
      in: header
      name: x-api-key
  schemas:
    PlaybackConfigKeys:
      type: object
      properties:
        id:
          type: string
          minLength: 1
          pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          example: '12345678-1111-1111-1111-123456789012'
      required:
        - id

    PlaybackKeys:
      type: object
      properties:
        configId:
          type: string
          minLength: 1
          pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          example: '12345678-1111-1111-1111-123456789012'
      required:
        - configId

    GlobalAdvert:
      type: object
      properties:
        adType:
          type: string
          enum:
            - vast
            - vmap
        discardAfterPlayback:
          type: boolean
        id:
          type: string
        persistent:
          type: boolean
        position:
          type: string
          oneOf:
            - enum:
                - pre
                - post
            - pattern: '^(\d+(\.\d+)?)$'
            - pattern: '^\d+%'
            - pattern: '^\d{2}:\d{2}:\d{2}\.\d{3}'
        preloadOffset:
          type: number
        skippableAfter:
          type: number
        url:
          type: string
      required:
        - adType
        - id
        - position
        - url
      x-example-pre-position:
        adType: vast
        id: id123
        position: pre
        url: https://<some-global-advert>
      x-example-percentage-position:
        adType: vast
        id: id123
        position: 25%
        url: https://<some-global-advert>
      x-example-timecode-position:
        adType: vast
        id: id123
        position: 00:10:30.000
        url: https://<some-global-advert>

    Auth:
      type: object
      properties:
        cloudpay:
          type: object
          minProperties: 1
          additionalProperties:
            type: string
          example:
            site: 'some-site'
      required:
        - cloudpay

    PlaybackConfig:
      allOf:
        - $ref: '#/components/schemas/PlaybackConfigKeys'
        - $ref: '#/components/schemas/PlaybackConfigData'

    PlaybackConfigData:
      allOf:
        - type: object
          properties:
            description:
              type: string
              example: 'Playback configuration example'
            tags:
              type: array
              items:
                type: string
                example: 'Tag'
            auth:
              $ref: '#/components/schemas/Auth'
            domains:
              type: array
              items:
                type: string
                example: 'some-host1.com'
            entitlementsUrl:
              type: string
              minLength: 1
            platform:
              type: object
              minProperties: 1
              additionalProperties:
                type: object
              example:
                kaltura:
                  partnerId: '1234567'
                  partnerAdminSecret: 'some-secret'
            player:
              $ref: '#/components/schemas/Player'
              minProperties: 1
            globalAdverts:
              $ref: '#/components/schemas/GlobalAdvert'
            defaults:
              type: object
              properties:
                auth:
                  type: string
                  minLength: 1
                  example: 'cloudpay'
                player:
                  type: string
                  minLength: 1
                  example: 'bitmovin'
                platform:
                  type: string
                  minLength: 1
                  example: 'kaltura'
          required:
            - domains
            - entitlementsUrl
            - platform
            - player

    player:
      type: object
      additionalProperties:
        type: object
        additionalProperties:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: object
      example:
        bitmovin:
          license: 12345678-1111-1111-1111-123456789012
          integrations:
            mux:
              player_name: 'some name'
              env_key: env_key_123
            resume:
              enabled: true
              jwtSecretKey: 'some key'

    PlaybackApiKeyConfig:
      allOf:
        - $ref: '#/components/schemas/PlaybackKeys'
        - type: object
          properties:
            apiKey:
              type: string
              minLength: 1
              example: some-apiKey
            id:
              type: string
              minLength: 1
              example: ghb4ok1234
          required:
            - apiKey
            - id

    PlaybackApiKeysConfig:
      allOf:
        - $ref: '#/components/schemas/PlaybackKeys'
        - type: array
          items: 
            - type: object
              properties: 
                apiKey:
                  type: string
                  minLength: 1
                  example: some-apiKey
                id:
                  type: string
                  minLength: 1
                  example: ghb4ok1234
                configId:
                  type: string
                  minLength: 1
                  example: 12345678-1111-1111-1111-123456789012  
          required:
            - apiKey
            - id
            - configId
    Player:
      allOf:
        - type: object
          properties:
            license:
              type: string
              minLength: 1
            integrations:
              type: object
              additionalProperties:
                type: object
                additionalProperties:
                  type: string
          required:
            - license
          example:
            bitmovin:
              license: 12345678-1111-1111-1111-123456789012
              integrations:
                mux:
                  player_name: 'some name'
                  env_key: env_key_123
                resume:
                  enabled: true
                  jwtSecretKey: 'some key'
