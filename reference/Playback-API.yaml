x-stoplight:
  docs:
    showModels: false

openapi: 3.1.0
info:
  title: API Reference
  version: '1.0'
  contact:
    name: Jonathon Robins
    email: Jonathon.Robins@pamediagroup.com
  summary: Service that retrieve back video metadata url and signed manifests.
  description: |-
    Playback API exposes the functionality to retrieve back video metadata and signed manifests ready for player consumption.
    Service that sit between the video player and Kaltura. Pass an entryID (video id) plus an access token (JWT) to the Playback API and it returns the signed playback URL
tags:
  - name: Playback
servers:
  - url: 'https://api.playback.streamamg.com/v1'
paths:
  /entry/{entryId}:
    get:
      summary: Get Playback data by entryID
      operationId: get-playback-data
      security:
        - bearerAuth: []
          ApiKey: []
      parameters:
        - name: entryId
          in: path
          schema:
            type: string
          required: true
          description: Entry ID in MP
      responses:
        '200':
          description: Success - get playback data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybackEndpointResponse'
              examples:
                Example - Success VoD:
                  value:
                    id: 0_4l1aj0bo
                    name: World Cup of Tests
                    description: Test Video
                    thumbnail: 'https://video-store/test/12345'
                    duration: 2800000
                    ksStatus: -1
                    media:
                      hls: 'https://open.http.mp.streamamg.com/p/Test-Partner/sp/Test-Partner00/playManifest/entryId/${entryId}/flavorIds/0_4l1aj0bo,0_522aj0tt/format/applehttp/protocol/https/a.m3u8?ks=YTlhYzYzNmJmOWVhMDQzNzRjYTY3M'
                Example - Success Live:
                  value:
                    id: 0_4l1aj0bo
                    name: World Cup of Tests
                    description: Test Video
                    thumbnail: 'https://video-store/test/12345'
                    duration: 2800000
                    ksStatus: -1
                    media:
                      mpegdash: url-to-mpegdash-manifest
                      hls: url-to-hls-manifest
                      applehttp: url-to-applehttp-manifest
                Example - Success VoD with Resume:
                  value:
                    id: 0_4l1aj0bo
                    name: World Cup of Tests
                    description: Test Video
                    thumbnail: 'https://video-store/test/12345'
                    duration: 2800000
                    playFrom: 341
                    ksStatus: -1
                    media:
                      hls: 'https://open.http.mp.streamamg.com/p/Test-Partner/sp/Test-Partner00/playManifest/entryId/${entryId}/flavorIds/0_4l1aj0bo,0_522aj0tt/format/applehttp/protocol/https/a.m3u8?ks=YTlhYzYzNmJmOWVhMDQzNzRjYTY3M'
                Example - Success VoD with GlobalAdverts:
                  value:
                    id: 0_4l1aj0bo
                    name: World Cup of Tests
                    description: Test Video
                    thumbnail: 'https://video-store/test/12345'
                    duration: 2800000
                    GlobalAdverts:
                      value:
                        adType: 'vast'
                        id: 'id123'
                        position: 'pre'
                        url: 'url-for-add-server'
                    ksStatus: -1
                    media:
                      hls: 'https://open.http.mp.streamamg.com/p/Test-Partner/sp/Test-Partner00/playManifest/entryId/${entryId}/flavorIds/0_4l1aj0bo,0_522aj0tt/format/applehttp/protocol/https/a.m3u8?ks=YTlhYzYzNmJmOWVhMDQzNzRjYTY3M'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: Error getting session identifier
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 400
                      - 401
                      - 403
                      - 404
                      - 440
                  ksStatus:
                    type: number
                    $ref: '#/components/schemas/ksStatus'
                  message:
                    type: string
                    minLength: 1
                required:
                  - status
                  - ksStatus
                  - message
              examples:
                Invalid Request:
                  value:
                    status: 400
                    ksStatus: 0
                    message: Bad Request Exception
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: Error getting playback data
                type: object
                properties:
                  status:
                    type: number
                    enum:
                      - 500
                  message:
                    type: string
                    minLength: 1
                required:
                  - status
                  - message
              examples:
                Internal Server Error:
                  value:
                    status: 500
                    message: 'Error getting playback data [Error stack]'
      description: |-
        In order to fetch the signed CDN URL, the user must first be authenticated(fetch the JWT access token). This token should be passed during the API call through the Bearer header.

        The API call should be made with entryId as path parameter.

        In order to ensure safe access to the API, it is necessary to pass the API key in the `x-api-key` header.
      tags:
        - Playback
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKey:
      type: apiKey
      in: header
      name: x-api-key
  schemas:
    PlaybackEndpointResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        thumbnail:
          type: string
        duration:
          type: number
        media:
          type: object
        playFrom:
          type: number
        globalAdverts:
          $ref: '#/components/schemas/GlobalAdverts'
        ksStatus:
          $ref: '#/components/schemas/ksStatus'
    ksStatus:
      type: number
      enum:
        - -1
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
      enumNames:
        - Granted
        - NoActiveSession
        - NoSubscription
        - NoEntitlement
        - Blocked
        - TooManyRequests
        - Error
        - CardAuthenticationRequired
    GlobalAdverts:
      type: array
      items:
        $ref: '#/components/schemas/Advert'
    Advert:
      type: object
      properties:
        adType:
          type: string
          enum:
            - vast
            - vmap
          description: Type of the advertisement.
        id:
          type: string
          description: Unique identifier for the advertisement.
        position:
          oneOf:
            - type: string
              enum:
                - pre
                - post
              description: Pre-roll or post-roll ad position.
            - type: string
              description: Mid-roll ad position as fractional seconds (e.g. 10.1), percentage (e.g. 25%), or timecode in format hh:mm:ss.mmm
        persistent:
          type: boolean
          description: If set to true, the ad tag will be processed and rescheduled automatically when a new source is loaded.
        discardAfterPlayback:
          type: boolean
          description: Specifies whether ad breaks are discarded after playback.
        url:
          type: string
          format: uri
          description: URL for the advertisement.
        preloadOffset:
          type: number
          description: Number of seconds before the ad break starts playing to preload the ad tag.
        skippableAfter:
          type: number
          description: Specifies after which time ads in the ad break become skippable.
      required:
        - adType
        - url
        - id
        - position
    MediaVoD:
      type: object
      properties:
        hls:
          type: string
    MediaLive:
      type: object
      properties:
        mpegdash:
          type: string
        hls:
          type: string
        applehttp:
          type: string
